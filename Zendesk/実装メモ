実装メモ
パターン1は、スライドショーの部分のタグをjs側で作成しているバージョン。
先に実装しといてなんだけど、きっとHTMLにタグだけ書いておく方が綺麗な気がする。


innerHTMLを使ってタグに要素を埋め込みたかったのですが、
innerHTMLを二行続けて書きまして、表示したらアレ、一行目さんがいなーい
となりました。

ばかでした。

以下、MDN web docsから引用

Element オブジェクトの innerHTML プロパティは、
要素内の HTML または XML のマークアップを取得したり設定したりします。

innerHTML に値を設定すると、要素のすべての子孫を削除して、
 htmlString の文字列で与えられた HTML を解析して構築されたノードに置き換えます。

すべての子孫を削除ってめっちゃ書いてありました…!

一般的に子要素の追加にはappendChild（上書きされない）を使うので、
innerHTMLは要素の追加というよりも要素を丸ごと書き換えるってイメージを持ってた方が良いのかもしれない

AppendChildの引数はnodeだった。
タグの入れ子がよくわからなくてだいぶ詰まった。




セキュリティの観点
プレーンテキストを挿入するときには innerHTML を使用せず、
代わりに Node.textContent を使用することをお勧めするらしい。
これは渡されたコンテンツを HTML として解釈するのではなく、生テキストとして挿入するやり方。

appendChild innerHTML



疑問
ヘッダーのロゴやメニューボタンの画像は、
Imgタグで設定するかdivでbackground-imageで設定するか
→今回は、ロゴもメニューもサイトにとって大事な構成要素（ホーム画面へのリンク、メニューの表示）になるのと、
Altで代替テキストを設定しておいた方が、SEO的にいいんじゃないかなと考えたため、
Imgタグにした。パスの文字数も少ないので。


Imgタグで設定
・装飾というよりはサイトを構成するにあたり必要な要素（サイトのコンテンツにとって意味があるもの。ロゴ、マップ、グラフなど）を設定という説。
・ここに画像が来るんだなと一目でわかる(divでもクラス名とか分かりやすくすれば伝わるか)。
・altタグで代替テキストを書くことが必須って書いてあったけどほんと？書かなくてもいけたけど、ルール上ってことなのかな。
　alt=“”のこともあるようだけど、そうまでして書くのなんでだろう。
・img要素として置いた場合はGoogleの画像検索に引っかかるのに対し、背景画像の場合はそうではないため、
ページ内の画像を検索結果に表示させたいような場合はimg要素として置き、そうでない場合は背景として表示させるという説。

background-imageで設定
・装飾の要素が強いもの。代替テキスト不要という説。
・こちらで画像を表示した方が良い例
* アイコン画像
* 背景画像
* 飾り枠などデザインを目的とした画像
文字数が多くなるとhtmlのデータが大きくなってしまって、それが積み重なると読み込むのに時間がかかって
ブラウザにページが表示されるのが遅くなるので、文書としてなくても困らない画像は、cssで表示させるのが良さそうという意見も。


疑問
スライドショーのドットナビの部分を何タグにするか

調べたら、
Ulタグ、spanタグなどが使われていた。
Ulは採番なしの箇条書き、spanはdivと似ていて複数のタグをまとめたりデザインを変えたりなど。
今回は、過去に作ったスライドショーを参考にulタグにしたが、正直どの書き方がいいか自分の中ではっきりしない。

スライドショーの機能自体は、
プラグインのswiperって奴を使うととても簡単に書けるらしい



横幅はデザインだと1280pxになっていますが、
画面幅に合わせるようにしました。

 background: #FFF 0% 0% no-repeat padding-box


ヘッダーとかメインコンテンツの
Background-positionは背景画像の表示開始位置。0% 0%と指定すると左端、上端から0%の位置ということになる。

Padding-boxは背景がpaddingボックスからの相対位置になるように設定する。
デザインでは出てきたけど、実装上は背景は白一色なのとtop,leftをそれぞれ設定してるので書きませんでした。


ロゴやメニューボタンの位置指定は、position:absoluteでtopとleftを指定するか
margin-topで余白指定することでデザインに近い感じにするか。どっちが一般的？なんだろう。


text-aling: center
→指定したブロック要素内のインライン要素に、
中央寄せ（水平方向）が適用される。今回だと、divタグの中のimgタグに適用される。

ブロック要素の中央寄せには、
Widthを指定した上でmarginを使って指定する

テキストの位置はできるだけ、スライド移動した時にずれてないほうが見やすいかなあ



イージング：イーズアウトは、ゆっくりと動き出し徐々に加速する動き
参考　https://blogs.adobe.com/japan/web-xd-ui-transition-easing/

表示非表示の切り替え
やり方いろいろあるけど何が一般的なんだろう。
・styleのdisplayで切り替え
・classの追加削除で切り替え
とかの切り替え






